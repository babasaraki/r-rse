[{"path":"index.html","id":"welcome-to-the-course-webpage","chapter":"1 Welcome to the course webpage!","heading":"1 Welcome to the course webpage!","text":"’s still magic even know ’s done.— Terry PratchettTODO: Fill brief description course , important, etcComputers now essential research telescopes, test tubes, libraries,\nmeans researchers need need know build, use, share software.\nHowever,\nintroductions programming focus developing commercial applications,\nexploring problems answering questions.\nseries books show latter\npart team.prequels book introduce three core skills:\nwrite short programs clean analyze data reproducible way,\nkeep track done,\nshare software results people.\njust astronomers spend careers designing telescopes,\nresearchers focus building software make colleagues’ lives easier.\nPeople called research software engineers,\naim book get ready role—help go writing code use\ncreating tools help entire field advance.TODO: Update section? Needs revision.researchers data scientists can write functions create programs several pages long,\nwant productive confidence results,\nbook provides pragmatic, tools-based introduction research software engineering.\nUnlike material courses aimed computer scientists professional software developers,\nbook uses data analysis motivating example\nassumes learner’s ultimate goal answer questions rather ship products.course material created using rmarkdown write lessons,\nbookdown create book format, GitHub host Git\nrepository material, GitHub Actions create website.\noriginal source material course found \nr-rse GitHub repository.","code":""},{"path":"index.html","id":"licensing","chapter":"1 Welcome to the course webpage!","heading":"1.1 Re-use and licensing","text":"material can freely re-used terms \nCreative Commons Attribution 4.0 International License\ncourse code licensed \nMIT License,\nmaterial can used, re-used, modified,\nlong attribution source.","code":""},{"path":"index.html","id":"target-audience-of-book","chapter":"1 Welcome to the course webpage!","heading":"1.2 Target audience of book","text":"TODO: book targeted towards? ? can use .","code":""},{"path":"index.html","id":"instructional-design","chapter":"1 Welcome to the course webpage!","heading":"1.3 Instructional design","text":"","code":""},{"path":"index.html","id":"rse-intro-ack","chapter":"1 Welcome to the course webpage!","heading":"1.4 Acknowledgments","text":"book owes existence \neveryone met Carpentries.\nalso grateful Insight Data Science sponsoring early stages work\neveryone contributed,\nparticularly Jonathan Dursi\nauthors (Noble, 2009; Haddock Dunn, 2010; Wilson et al., 2014, 2017; Scopatz Huff, 2015; Taschuk Wilson, 2017; Brown Wilson, 2018; Devenyi et al., 2018; Sholler et al., 2019; Wilson, 2019).\n\n\n","code":""},{"path":"glossary.html","id":"glossary","chapter":"A Glossary","heading":"A Glossary","text":"AbandonwareFIXME\nAbsolute errorFIXME\nAbsolute pathFIXME\nAccuracyFIXME\nAction (Make):\nFIXMEActive listeningFIXME\nActual output (test):\nFIXMEActual resultFIXME\nAggregateFIXME\nAgile developmentFIXME\nAllyFIXME\nAnalysis estimationFIXME\nAnnotated tag (version control):\nFIXMEAppend modeFIXME\nApplication Programming Interface (API):\nFIXMEAssertionFIXME\nAuthentic taskA task contains important elements things learners real (non-classroom situations).\nauthentic,\ntask require learners construct answers rather choose provided answers,\nwork tools data use real life.\nAuto-completionFIXME\nAutomatic variableFIXME\nAutomatic variable (Make):\nFIXMEBacklogFIXME\nBashFIXME\nBeeswarm plotFIXME\nBinary codeFIXME\nBit rotFIXME\nBoilerplateFIXME\nBranchFIXME\nBranch-per-feature workflowFIXME https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow\nBreakpointFIXME\nBufferFIXME\nBug reportFIXME\nBug trackerFIXME\nBuild toolFIXME\nBuild toolFIXME https://en.wikipedia.org/wiki/List_of_build_automation_software\nByte codeFIXME\nCall stackFIXME\nCamel caseFIXME\nCatch (exception):\nFIXMEChecking-driven development (CDD):\nFIXMEChecklistFIXME\nCode browserFIXME\nCode coverageFIXME\nCode reviewFIXME\nCognitive loadFIXME\nComma-separated values (CSV):\nFIXMECommand argumentFIXME\nCommand flagFIXME\nCommand historyFIXME\nCommand optionFIXME\nCommand shellFIXME\nCommand switchFIXME\nCommand-line interface (CLI):\nFIXMECommentFIXME\nCommitFIXME: define noun verb.\nCommit hashFIXME\nCommit messageFIXME\nCommonsFIXME\nCompetent practitionerSomeone can normal tasks normal effort normal circumstances.\nSee also novice expert.\nCompiled languageFIXME\nCompilerFIXME\nComputational competenceFIXME\nComputational notebookFIXME\nComputational stylometryFIXME\nComputational thinkingFIXME\nConditional expressionFIXME\nConfiguration objectFIXME\nConfirmation biasFIXME\nContext managerFIXME\nContinuation promptFIXME\nContinuous integrationFIXME\nCorpusFIXME\nCoverageFIXME\nCreative Commons - Attribution License (CC-):\nFIXMECurb cutshttps://medium.com/@mosaicofminds/-curb-cut-effect--making-public-spaces-accessible--people--disabilities-helps-everyone-d69f24c58785\nCurrent working directoryFIXME\nDRY (Don’t Repeat )general principle programming ’s typically better define something (function, constant…) \nrefer consistently “single source truth” throughout piece software\ndefine copies multiple places,\nmake changes one place.\nuseful helpful principle thought involate rule.\nData engineeringFIXME\nData packageFIXME\nDeclarative programmingFIXME\nDefault targetFIXME\nDefault target (Make):\nFIXMEDelimiterFIXME\nDependency graphFIXME\nDesign patternFIXME\nDesign patternsFIXME\nDestructuringFIXME\nDictionaryFIXME\nDigital Object Identifier (DOI):\nFIXMEDirectory TreeIf nesting relationships directories filesystem drawn arrows containing directory nested ones,\ntree structure develops.\nDirectoryA folder filesystem.\nDiskDisk refers disk storage, physical component computer stores information disk.\ncommon kind disk storage hard disk drive,\nstorage drive non-removable disk.\nDocstringFIXME\nDocumentation generatorFIXME\nDownvoteFIXME\nEmbedded documentationFIXME\nEniacFIXME\nEnvironmentFIXME\nError (result unit test):\nFIXMEEscape sequenceFIXME\nExceptionFIXME\nExit statusFIXME\nExpected output (test):\nFIXMEExpected resultFIXME\nExpertSomeone can diagnose handle unusual situations,\nknows usual rules apply,\ntends recognize solutions rather reasoning .\nSee also competent practitioner novice.\nExploratory programmingFIXME\nExponentFIXME\nExport variableFIXME\nExternal errorFIXME\nFailure (result unit test):\nFIXMEFalse beginnerSomeone studied language learning .\nFalse beginners start point true beginners\n(.e., pre-test show proficiency)\ncan move much quickly.\nFalse negativeFIXME\nFalse positiveFIXME\nFeature boxingFIXME\nFeature creepFIXME\nFeature requestFIXME\nFilename extensionFIXME\nFilename stemFIXME\nFilesystemControls files stored retrieved disk operating system.\nAlso used refer disk used store files type filesystem.\nFilterFIXME\nFixtureFIXME\nFlag variableFIXME\nFlagFIXME\nFolderFIXME\nForgeFIXME\nForkFIXME\nFormat stringFIXME\nFrequently Asked Questions (FAQ):\nFIXMEFull identifier (Git):\nFIXMEFully-qualified nameFIXME\nFunction attributeFIXME\nFunction (Make):\nFIXMEGNU Public License (GPL):\nFIXMEGitFIXME\nGit branchFIXME\nGit cloneFIXME\nGit conflictFIXME\nGit forkFIXME\nGit mergeFIXME\nGit pullFIXME\nGit pushFIXME\nGit stageFIXME\nGitFIXME\nGitHub PagesFIXME\nGlobbingFIXME\nGraphical user interface (GUI):\nFIXMEHTTP status codeFIXME\nHitchhikerFIXME\nHome directoryFIXME\nGovernanceFIXME\nHot spotFIXME\nISO date formatFIXME\nImpostor syndromeFIXME\n-place operatorFIXME\nIndexFIXME\nInstallFIXME\nIntegrated Development Environment (IDE):\nFIXMEInternal errorFIXME\nInterpeterFIXME\nInterpreted languageFIXME\nInterruption bingoFIXME\nIssue tracking systemFIXME\nIssueFIXME\nIteration (software development):\nFIXMEJSONFIXME\nJenny (repository):\nFIXMEJoin (database tables):\nFIXMEKebab caseFIXME\nKeyFIXME\nLabel (issue tracker):\nFIXMELearned helplessnessFIXME\nLibraryFIXME\nLinterFIXME\nList comprehensionFIXME\nLog fileFIXME\nLogging frameworkFIXME\nLong optionFIXME\nLoop bodyFIXME\nLoop (Unix):\nFIXMEMIT LicenseFIXME\nMacroFIXME\nMagic numberFIXME\nMagnitudeFIXME\nMakefileFIXME\nMantissaFIXME\nMartha’s RulesFIXME\nMaximum likelihood extimationFIXME\nMemoryA physical device computer temporarily stores information immediate use.\nMental modelA simplified representation key elements relationships problem domain\ngood enough support problem solving.\nMethodA function specific object type, based qualities\ntype, e.g. string method like upper() turns characters\nstring uppercase.\nMIT LicenseFIXME\nNamespaceA way organizing names related objects, functions, variables\navoid confusion (instance) common names might well occur multiple packages.\nNanoFIXME\nNgoFIXME\nInvented (NIH):\nFIXMENoviceSomeone yet built usable mental model domain.\nSee also competent practitioner expert.\nORCIDFIXME\nObjectAn object programming language’s way descrbing storing values,\nusually labeled variable name.\nObject-oriented programmingFIXME\nOpen licenseFIXME\nOpen scienceFIXME\nOperating systemFIXME\nOperational testFIXME\nOppressionFIXME\nOptional argumentFIXME\nOrthogonalityFIXME\nOverlay configurationFIXME\nOverloadingFIXME\nPackageFIXME\nPagerFIXME\nPair programmingFIXME\nParent directoryFIXME\nParking lotFIXME\nPath coverageFIXME\nPathFIXME\nPattern ruleFIXME\nPhony targetFIXME\nPhony targetFIXME\nPipe (Unix):\nFIXMEPositional argumentFIXME\nPost-mortemFIXME\nPothole caseFIXME\nPower lawFIXME\nPrecisionFIXME\nPrerequisite (Make):\nFIXMEPrivilegeFIXME\nProcedural programmingFIXME\nProcessFIXME\nProduct managerFIXME\nProject managerFIXME\nPromptFIXME\nProvenanceFIXME\nPseudorandom number generator (PRNG):\nFIXMEPublic domain license (CC-0):\nFIXMEPull requestFIXME\nPythonFIXME\nRaiseFIXME\nRaster imageFIXME\nRebaseFIXME\nRecursionFIXME\nRedirectionFIXME\nRefactorFIXME\nRefactoringFIXME\nRegular expressiona sequence characters define pattern can used find matching strings\nRelative errorFIXME\nRelative importIn Python,\nimporting module relative current path\nthus likely within current package (e.g., . import generate)\nrather import globally-defined package (e.g., zipfpy import generate).\nRelative pathFIXME\nRemote loginFIXME\nRemote repositoryFIXME\nReplFIXME\nRepositoryFIXME\nRepresentation State Transfer (REST):\nFIXMEReproducible example (reprex):\nFIXMEReproducible researchFIXME\nResearch software engineer (RSE):\nFIXMERestructured Text (reST)plain text markup language used much Python documentation documentation tooling.\nRevisionFIXME\nRoot directoryFIXME\nRotating fileFIXME\nRule (Make):\nFIXMESSH keyFIXME\nSSH protocolFIXME\nScalable Vector Graphics (SVG):\nFIXMEScriptFIXME\nSearch pathFIXME\nSeed (pseudorandom number generator):\nFIXMESemantic versioningFIXME https://semver.org/\nSense voteFIXME\nSet override (pattern):\nFIXMEShebangFIXME\nShell scriptFIXME\nShort circuit testFIXME\nShort identifier (Git):\nFIXMEShort optionFIXME\nSide effectsFIXME\nSignFIXME\nSilent errorFIXME\nSilent failureFIXME\nSnake caseFIXME\nSoftware development processFIXME\nSource codeFIXME\nStand-meetingFIXME\nStandard errorFIXME\nStandard errorFIXME\nStandard inputFIXME\nStandard inputFIXME\nStandard outputFIXME\nStandard outputFIXME\nStop wordFIXME\nStreaming dataFIXME\nSturdy developmentFIXME\nSubcommandFIXME\nSubdirectoryFIXME\nSubsamplingFIXME\nSuccess (result unit test):\nFIXMESustainabilityFIXME\nSustainable softwareFIXME\nSymbolic debuggerFIXME\nSyntax highlightingFIXME\nSynthetic dataFIXME\nTab completionFIXME\nTag (version control):\nFIXMETagFIXME\nTargetFIXME\nTarget (Make):\nFIXMETarget (oppression):\nFIXMETechnical debtFIXME\nTernary expressionFIXME\nTest coverageFIXME\nTest frameworkFIXME\nTest isolationFIXME\nTest runnerFIXME\nTest-driven developmentFIXME\nThree stickiesFIXME\nTicketFIXME\nTicketing systemFIXME\nTidy dataAs defined Wickham (2014), tabular data tidy (1) variable one column,\n(2) different observation variable different row,\n(3) one table kind variable, \n(4) multiple tables, includes key related data can linked.\nTime boxingFIXME\nTimestamp (file):\nFIXMETldrFIXME\nToleranceFIXME\nTransitive dependencyFIXME\nTriageFIXME\nTuningFIXME\nTupleFIXME\nTypesetting languageFIXME\nUnit testFIXME\nUnix shellFIXME\nUpdate operatorSee -place operator.\nUpvoteFIXME\nValidationFIXME\nVariable (Python):\nsymbolic name reserves memory store value.Variable (Make):\nFIXMEVector imageFIXME\nVerificationFIXME\nVersion control systemFIXME\nViolin plotFIXME\nVirtual environmentIn Python, virtualenv package allows create virtual, disposable, Python software environments\ncontaining packages versions packages want use particular project task,\ninstall new packages environment\nwithout affecting virtual environments system-wide default environment.\nVirtual machineA program pretends computer.\nmay seem bit redundant,\nVMs quick create start ,\nchanges made inside virtual machine contained within VM\ncan install new packages run completely different operating system\nwithout affecting underlying computer.\nSee Get (WYSIWYG):\nFIXMEWhitespaceFIXME\nWildcardFIXME\nWorking directoryFIXME\nWorking memoryFIXME\nWrap codeFIXME\nWrapperFIXME\nYAMLFIXME\n","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"Brown, N.C.C., G. Wilson. 2018. Ten quick tips teaching programming. PLOS Computational Biology. 14. doi:10.1371/journal.pcbi.1006023.Devenyi, G.. et al. 2018. Ten simple rules collaborative lesson development. PLOS Computational Biology. 14. doi:10.1371/journal.pcbi.1005963.Haddock, S., C. Dunn. 2010. Practical computing biologists. Sinauer Associates.\nFIXMENoble, W.S. 2009. quick guide organizing computational biology projects. PLoS Computational Biology. 5. doi:10.1371/journal.pcbi.1000424.\norganize small medium-sized bioinformatics project.Scopatz, ., K.D. Huff. 2015. Effective computation physics. O’Reilly Media.\ncomprehensive introduction scientific computing PythonSholler, D. et al. 2019. Ten simple rules helping newcomers become contributors open projects. PLOS Computational Biology. 15:e1007296. doi:10.1371/journal.pcbi.1007296.Taschuk, M., G. Wilson. 2017. Ten simple rules making research software robust. PLoS Computational Biology. 13. doi:10.1371/journal.pcbi.1005412.\nshort guide making research software usable people.Wickham, H. 2014. Tidy data. Journal Statistical Software. 59. doi:10.18637/jss.v059.i10.\ndefining paper tidy data.Wilson, G. 2019. Ten quick tips creating effective lesson. PLOS Computational Biology. 15:e1006915. doi:10.1371/journal.pcbi.1006915.Wilson, G. et al. 2014. Best practices scientific computing. PLoS Biology. 12. doi:10.1371/journal.pbio.1001745.\nOutlines mature research software project look like.Wilson, G. et al. 2017. Good enough practices scientific computing. PLoS Computational Biology. 13. doi:10.1371/journal.pcbi.1005510.\nOutlines “good enough” research software project look like.","code":""}]
